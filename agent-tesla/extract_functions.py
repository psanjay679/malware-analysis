from static_data import *
import re
import json


def decode_bytearray(byte_array):

    res = ''
    for idx, val in enumerate(byte_array):
        res += chr((val ^ idx ^ 170) & 0xff)
    
    return res


def extract_functions(string):

    result = list()
    func_val = func_args = None

    for line in func_str.splitlines():
        if 'public static string' in line:
            func_val = line.split()[-1][:-2]
        else:
            if 'return' in line:
                func_args = re.findall(r'\d+,\s\d+,\s\d+', line)
        if func_val and func_args:
            func_args = list(map(int, func_args[0].split(', ')))
            result.append(f'{func_val} -> {string[func_args[1]:func_args[1] + func_args[2]]}')
            func_val = func_args = None
    return result

strings = decode_bytearray(byte_array)
decoded_functions = extract_functions(strings)
print(json.dumps(decoded_functions, indent=4))